import{a as u,o as t,e as n,f as r,t as l,k as p,u as i,F as d,l as m,c as h,m as g,j as f}from"./entry.da0deee2.js";const x=["href"],j={class:"text-lg"},b={class:"text-sm mb-2"},k={class:"text-sm"},$=u({__name:"TileCard",props:{name:null,lang:null,description:null,url:null},setup(o){const s=o;return(e,c)=>(t(),n("a",{href:o.url,class:"tile inline-block p-2 rounded-xl shadow hover:shadow-xl"},[r("h3",j,l(s.name),1),r("h4",b,"Language: "+l(s.lang),1),r("p",k,l(s.description),1)],8,x))}}),G={key:0},v={key:1,class:"container m-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4"},L=u({__name:"GithubProjectGrid",props:{username:null},setup(o){const s=o,e=p({isLoading:!0,projects:{}});return fetch(`https://api.github.com/users/${encodeURIComponent(s.username)}/repos`).then(async c=>{e.projects=await c.json(),e.isLoading=!1}).catch(c=>{console.log(`Failed to fetch GitHub user projects due to error ${c}`)}),(c,P)=>{const _=$;return t(),n("div",null,[i(e).isLoading?(t(),n("p",G,"...")):(t(),n("div",v,[(t(!0),n(d,null,m(i(e).projects,a=>(t(),h(_,{name:a.name,url:a.html_url,lang:a.language,description:a.description},null,8,["name","url","lang","description"]))),256))]))])}}}),y={},B=r("h2",{class:"text-xl mb-2",id:"github-projects"},"GitHub Projects",-1);function C(o,s){const e=L;return t(),n(d,null,[B,f(e,{username:"lxsavage"})],64)}const F=g(y,[["render",C]]);export{F as default};
